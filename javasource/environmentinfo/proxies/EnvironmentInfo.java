// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package environmentinfo.proxies;

public class EnvironmentInfo
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject environmentInfoMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EnvironmentInfo.EnvironmentInfo";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ApplicationUrl("ApplicationUrl"),
		RuntimeVersion("RuntimeVersion"),
		DTAP("DTAP");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public EnvironmentInfo(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EnvironmentInfo.EnvironmentInfo"));
	}

	protected EnvironmentInfo(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject environmentInfoMendixObject)
	{
		if (environmentInfoMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EnvironmentInfo.EnvironmentInfo", environmentInfoMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EnvironmentInfo.EnvironmentInfo");

		this.environmentInfoMendixObject = environmentInfoMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'EnvironmentInfo.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static environmentinfo.proxies.EnvironmentInfo initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return environmentinfo.proxies.EnvironmentInfo.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static environmentinfo.proxies.EnvironmentInfo initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new environmentinfo.proxies.EnvironmentInfo(context, mendixObject);
	}

	public static environmentinfo.proxies.EnvironmentInfo load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return environmentinfo.proxies.EnvironmentInfo.initialize(context, mendixObject);
	}

	public static java.util.List<environmentinfo.proxies.EnvironmentInfo> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<environmentinfo.proxies.EnvironmentInfo> result = new java.util.ArrayList<environmentinfo.proxies.EnvironmentInfo>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EnvironmentInfo.EnvironmentInfo" + xpathConstraint))
			result.add(environmentinfo.proxies.EnvironmentInfo.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ApplicationUrl
	 */
	public final java.lang.String getApplicationUrl()
	{
		return getApplicationUrl(getContext());
	}

	/**
	 * @param context
	 * @return value of ApplicationUrl
	 */
	public final java.lang.String getApplicationUrl(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ApplicationUrl.toString());
	}

	/**
	 * Set value of ApplicationUrl
	 * @param applicationurl
	 */
	public final void setApplicationUrl(java.lang.String applicationurl)
	{
		setApplicationUrl(getContext(), applicationurl);
	}

	/**
	 * Set value of ApplicationUrl
	 * @param context
	 * @param applicationurl
	 */
	public final void setApplicationUrl(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String applicationurl)
	{
		getMendixObject().setValue(context, MemberNames.ApplicationUrl.toString(), applicationurl);
	}

	/**
	 * @return value of RuntimeVersion
	 */
	public final java.lang.String getRuntimeVersion()
	{
		return getRuntimeVersion(getContext());
	}

	/**
	 * @param context
	 * @return value of RuntimeVersion
	 */
	public final java.lang.String getRuntimeVersion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.RuntimeVersion.toString());
	}

	/**
	 * Set value of RuntimeVersion
	 * @param runtimeversion
	 */
	public final void setRuntimeVersion(java.lang.String runtimeversion)
	{
		setRuntimeVersion(getContext(), runtimeversion);
	}

	/**
	 * Set value of RuntimeVersion
	 * @param context
	 * @param runtimeversion
	 */
	public final void setRuntimeVersion(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String runtimeversion)
	{
		getMendixObject().setValue(context, MemberNames.RuntimeVersion.toString(), runtimeversion);
	}

	/**
	 * Set value of DTAP
	 * @param dtap
	 */
	public final environmentinfo.proxies.DTAP getDTAP()
	{
		return getDTAP(getContext());
	}

	/**
	 * @param context
	 * @return value of DTAP
	 */
	public final environmentinfo.proxies.DTAP getDTAP(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.DTAP.toString());
		if (obj == null)
			return null;

		return environmentinfo.proxies.DTAP.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of DTAP
	 * @param dtap
	 */
	public final void setDTAP(environmentinfo.proxies.DTAP dtap)
	{
		setDTAP(getContext(), dtap);
	}

	/**
	 * Set value of DTAP
	 * @param context
	 * @param dtap
	 */
	public final void setDTAP(com.mendix.systemwideinterfaces.core.IContext context, environmentinfo.proxies.DTAP dtap)
	{
		if (dtap != null)
			getMendixObject().setValue(context, MemberNames.DTAP.toString(), dtap.toString());
		else
			getMendixObject().setValue(context, MemberNames.DTAP.toString(), null);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return environmentInfoMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final environmentinfo.proxies.EnvironmentInfo that = (environmentinfo.proxies.EnvironmentInfo) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EnvironmentInfo.EnvironmentInfo";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
